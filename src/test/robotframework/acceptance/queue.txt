*** Settings ***
Library			JMSLibrary  ${INITIAL_CONTEXT_FACTORY}  ${PROVIDER_URL}
Library			OperatingSystem
Suite Setup		Connect And Start
Suite Teardown  Close
Test Setup      Clear Queue  ${QUEUE}
Test Tear Down  Clear Queue  ${QUEUE}

*** Variables ***
${INITIAL_CONTEXT_FACTORY}  org.apache.activemq.jndi.ActiveMQInitialContextFactory
${PROVIDER_URL}             tcp://localhost:61616?jms.useAsyncSend=false
${QUEUE}                    QUEUE.JMSLIBRARY.TEST
${TOPIC}                    TOPIC.JMSLIBRARY.TEST
${SUBSCRIBER}               acceptancetest
${BODY_TEXT}                Hello world!

*** Test Cases ***
Send and Clear
    ${c}=  Clear Queue  ${QUEUE}
    Should Be Equal As Integers  0  ${c}
    Create Text Message  ${BODY_TEXT}
    Send To Queue  ${QUEUE}
    Create Text Message  ${BODY_TEXT}
    Send To Queue  ${QUEUE}
    Create Text Message  ${BODY_TEXT}
    Send To Queue  ${QUEUE}
    ${c}=  Clear Queue  ${QUEUE}
    Should Be Equal As Integers  3  ${c}

Queue Depth
    Create Text Message  ${BODY_TEXT}
    Send To Queue  ${QUEUE}
    Create Text Message  ${BODY_TEXT}
    Send To Queue  ${QUEUE}
    ${c}=  Queue Depth  ${QUEUE}
    Should Be Equal As Integers  2  ${c}

Double Send
    Create Text Message  ${BODY_TEXT}
    Send To Queue  ${QUEUE}
    ${v1}=  Get Message Id
    Send To Queue  ${QUEUE}
    ${v2}=  Get Message Id
    Should Not Be Equal  ${v1}  ${v2}

Send and Receive TextMessage
    Create Text Message  ${BODY_TEXT}
    Send To Queue  ${QUEUE}
    Wait Until Keyword Succeeds  10 s  1 s  Receive From Queue  ${QUEUE}
    ${body}=  Get Text
    Should Be Equal  ${BODY_TEXT}  ${body}
    
Send and Receive TextMessage with Property
    ${property}  Set Variable  the_value
    Create Text Message  ${BODY_TEXT}
    Set String Property  ownProp  ${property}
    Send To Queue  ${QUEUE}
    Wait Until Keyword Succeeds  10 s  1 s  Receive From Queue  ${QUEUE}
    ${receivedProperty}=  Get String Property  ownProp
    Should Be Equal As Strings  ${receivedProperty}  ${property}

Message Id
    Create Text Message  ${BODY_TEXT}
    ${id}=  Get Message Id
    Should Be Equal As Strings  None  ${id}
    Send To Queue  ${QUEUE}
    ${id}=  Get Message Id
    Should Start With  ${id}  ID:

Set Type
    Create Text Message  ${BODY_TEXT}
    Set Type  txt
    Send To Queue  ${QUEUE}
    Wait Until Keyword Succeeds  10 s  1 s  Receive From Queue  ${QUEUE}
    ${type}=  Get Type
    Should Be Equal As Strings  ${type}  txt

Correlation Id
    Create Text Message  ${BODY_TEXT}
    Set Correlation Id  123
    Send To Queue  ${QUEUE}
    Wait Until Keyword Succeeds  10 s  1 s  Receive From Queue  ${QUEUE}
    ${cid}=  Get Correlation Id
    Should Be Equal As Strings  ${cid}  123

Reply To Queue with Queue
    Create Text Message  ${BODY_TEXT}
    Set Reply To Queue  Q.TEST.REPLY
    Send To Queue  ${QUEUE}
    Wait Until Keyword Succeeds  10 s  1 s  Receive From Queue  ${QUEUE}
    ${r}=  Get Reply To Queue
    Should Be Equal As Strings  ${r}  Q.TEST.REPLY

Reply To Queue with Topic
    Create Text Message  ${BODY_TEXT}
    Set Reply To Topic  ${TOPIC}
    Send To Queue  ${QUEUE}
    Wait Until Keyword Succeeds  10 s  1 s  Receive From Queue  ${QUEUE}
    ${q}=  Get Reply To Queue
    Should Be Equal As Strings  ${q}  None

Reply To Topic with Topic
    Create Text Message  ${BODY_TEXT}
    Set Reply To Topic  ${TOPIC}
    Send To Queue  ${QUEUE}
    Wait Until Keyword Succeeds  10 s  1 s  Receive From Queue  ${QUEUE}
    ${t}=  Get Reply To Topic
    Should Be Equal As Strings  ${t}  ${TOPIC}

Reply To Topic with Queue
    Create Text Message  ${BODY_TEXT}
    Set Reply To Queue  Q.TEST.REPLY
    Send To Queue  ${QUEUE}
    Wait Until Keyword Succeeds  10 s  1 s  Receive From Queue  ${QUEUE}
    ${t}=  Get Reply To Topic
    Should Be Equal As Strings  ${t}  None

Producer TimeToLive and Message Expiration
    Create Text Message  ${BODY_TEXT}
    Set Producer Time To Live  20000
    Send To Queue  ${QUEUE}
    Wait Until Keyword Succeeds  10 s  1 s  Receive From Queue  ${QUEUE}
    ${v}=  Get Expiration
    ${e}=  Evaluate  ${v} > 0
    Should Be True  ${e}
